private static Link GetLastLink(Link self, int size, PagingOptions pagingOptions)
{
    if (pagingOptions?.Limit == null) return null;

    var limit = pagingOptions.Limit.Value;

    if (size <= limit) return null;

    var offset = Math.Ceiling((size - (double)limit) / limit) * limit;

    var parameters = new RouteValueDictionary(self.RouteValues)
    {
        ["limit"] = limit,
        ["offset"] = offset
    };
    var newLink = Link.ToCollection(self.RouteName, parameters);

    return newLink;
}

private static Link GetPreviousLink(Link self, int size, PagingOptions pagingOptions)
{
    if (pagingOptions?.Limit == null) return null;
    if (pagingOptions?.Offset == null) return null;

    var limit = pagingOptions.Limit.Value;
    var offset = pagingOptions.Offset.Value;

    if (offset == 0)
    {
        return null;
    }

    if (offset > size)
    {
        return GetLastLink(self, size, pagingOptions);
    }

    var previousPage = Math.Max(offset - limit, 0);

    if (previousPage <= 0)
    {
        return self;
    }

    var parameters = new RouteValueDictionary(self.RouteValues)
    {
        ["limit"] = limit,
        ["offset"] = previousPage
    };
    var newLink = Link.ToCollection(self.RouteName, parameters);

    return newLink;
}
